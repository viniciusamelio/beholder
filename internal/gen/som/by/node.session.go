// Code generated by github.com/go-surreal/som, DO NOT EDIT.
package by

import (
	models "beholder-api/internal/application/models"
	lib "beholder-api/internal/gen/som/internal/lib"
)

var Session = newSession[models.Session]("")

func newSession[M any](key string) session[M] {
	return session[M]{
		CreatedAt: lib.NewBaseSort[M](keyed(key, "created_at")),
		EnvUID:    lib.NewBaseSort[M](keyed(key, "env_uid")),
		ID:        lib.NewBaseSort[M](keyed(key, "id")),
		UID:       lib.NewBaseSort[M](keyed(key, "uid")),
		UpdatedAt: lib.NewBaseSort[M](keyed(key, "updated_at")),
		UserID:    lib.NewStringSort[M](keyed(key, "user_id")),
		key:       key,
	}
}

type session[M any] struct {
	key       string
	ID        *lib.BaseSort[M]
	UID       *lib.BaseSort[M]
	EnvUID    *lib.BaseSort[M]
	UserID    *lib.StringSort[M]
	CreatedAt *lib.BaseSort[M]
	UpdatedAt *lib.BaseSort[M]
}

func (n session[M]) Env() environment[M] {
	return newEnvironment[M](keyed(n.key, "env"))
}
