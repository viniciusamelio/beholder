// Code generated by github.com/go-surreal/som, DO NOT EDIT.
package by

import (
	models "beholder-api/internal/application/models"
	lib "beholder-api/internal/gen/som/internal/lib"
)

var Response = newResponse[models.Response]("")

func newResponse[M any](key string) response[M] {
	return response[M]{
		Body:      lib.NewStringSort[M](keyed(key, "body")),
		CallUID:   lib.NewBaseSort[M](keyed(key, "call_uid")),
		CreatedAt: lib.NewBaseSort[M](keyed(key, "created_at")),
		Headers:   lib.NewStringSort[M](keyed(key, "headers")),
		ID:        lib.NewBaseSort[M](keyed(key, "id")),
		SentAt:    lib.NewBaseSort[M](keyed(key, "sent_at")),
		Status:    lib.NewBaseSort[M](keyed(key, "status")),
		UID:       lib.NewBaseSort[M](keyed(key, "uid")),
		key:       key,
	}
}

type response[M any] struct {
	key       string
	ID        *lib.BaseSort[M]
	UID       *lib.BaseSort[M]
	Status    *lib.BaseSort[M]
	CallUID   *lib.BaseSort[M]
	Body      *lib.StringSort[M]
	Headers   *lib.StringSort[M]
	CreatedAt *lib.BaseSort[M]
	SentAt    *lib.BaseSort[M]
}

func (n response[M]) Call() call[M] {
	return newCall[M](keyed(n.key, "call"))
}
