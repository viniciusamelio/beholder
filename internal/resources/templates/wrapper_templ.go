// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.696
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Wrapper() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Beholder</title><link href=\"/static/css/output.css\" rel=\"stylesheet\"><link href=\"https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"https://unpkg.com/franken-ui@2.0.0-internal.40/dist/css/core.min.css\"><link rel=\"stylesheet\" href=\"https://unpkg.com/franken-ui@2.0.0-internal.40/dist/css/utilities.min.css\"><script src=\"https://unpkg.com/franken-ui@2.0.0-internal.40/dist/js/core.iife.js\" type=\"module\"></script><script src=\"https://unpkg.com/franken-ui@2.0.0-internal.40/dist/js/icon.iife.js\" type=\"module\"></script><style>\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n\n        body {\n            font-family: 'Inter', sans-serif;\n        }\n\n        .sidebar-item:hover {\n            background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        .sidebar-item.active {\n            background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        .dropdown {\n            position: relative;\n            display: inline-block;\n        }\n\n        .dropdown-content {\n            display: none;\n            position: absolute;\n            background-color: white;\n            min-width: 200px;\n            box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);\n            border-radius: 8px;\n            border: 1px solid #e5e7eb;\n            z-index: 1;\n        }\n\n        .dropdown:hover .dropdown-content {\n            display: block;\n        }\n\n        @media (max-width: 1024px) {\n            .sidebar {\n                transform: translateX(-100%);\n                transition: transform 0.2s;\n            }\n\n            .sidebar.active {\n                transform: translateX(0);\n            }\n        }\n    </style></head><body class=\"dark bg-background\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
