// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.696
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "beholder-api/internal/application/models"

func Sidebar(envs *[]*models.Environment) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<aside class=\"sidebar w-64 h-screen sticky top-0 left-0 bg-card border-r-2 border-border flex flex-col text-foreground\"><div class=\"p-4 border-b border-border\"><div class=\"dropdown w-full\"><button class=\"w-full px-3 py-2 text-sm text-left rounded-lg hover:bg-secondary flex items-center\"><i class=\"ri-command-line mr-2\"></i> Acme Inc <i class=\"ri-arrow-down-s-line ml-auto\"></i></button></div></div><!-- Sidebar Content --><nav class=\"flex-1 overflow-y-auto p-4\"><div class=\"space-y-4\"><!-- Personal Section --><div><h3 class=\"text-xs font-semibold text-gray-500 mb-2\">Personal</h3><div class=\"space-y-1\"><a href=\"#\" class=\"sidebar-item flex items-center text-sm px-3 py-2 rounded-lg\"><i class=\"ri-folders-line mr-2\"></i> Calls</a> <a href=\"#\" class=\"sidebar-item flex items-center text-sm px-3 py-2 rounded-lg\"><i class=\"ri-history-line mr-2\"></i> Replay history</a></div></div><div><h3 class=\"text-xs font-semibold text-gray-500 mb-2\">Environments</h3><div class=\"space-y-1\"><ul>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, env := range *envs {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li><a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 templ.SafeURL = "/env/" + templ.SafeURL(env.ID)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var2)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"sidebar-item flex items-center text-sm px-3 py-2 rounded-lg\"><span class=\"w-2 h-2 rounded-full bg-blue-500 mr-2\"></span> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(env.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/resources/components/sidebar.templ`, Line: 58, Col: 41}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</a></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></div></div></nav><!-- Sidebar Footer --></aside>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
